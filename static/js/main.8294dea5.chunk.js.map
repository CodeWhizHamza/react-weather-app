{"version":3,"sources":["contexts/WeatherContext.js","weather-icons.svg","components/WeatherCard/WeatherCardHeader.jsx","components/WeatherCard/WeatherCardFooter.jsx","components/WeatherCard/WeatherCard.jsx","components/Weather.jsx","App.js","hooks/useFetchWeather.js","reportWebVitals.js","index.js"],"names":["WeatherContext","React","createContext","displayName","WeatherCardHeader","temp","weather","useContext","weatherIcon","iconsFile","icon","className","main","Math","round","description","city","alt","xlinkHref","WeatherCardFooter","getTemperatureInCelsius","pressure","humidity","feels_like","WeatherCard","Weather","id","containerImageUrl","clearSky","fewClouds","scatteredClouds","brokenClouds","showerRain","rain","thunderstorm","snow","mist","String","startsWith","containerStyles","backgroundImage","style","App","weatherData","useState","weatherApiUrl","setWeatherApiUrl","setWeatherData","fetchedCity","setFetchedCity","process","WEATHER_API_KEY","REACT_APP_WEATHER_API_KEY","LOCATION_API_KEY","REACT_APP_LOCATION_API_KEY","WEATHER_API_URL","REACT_APP_WEATHER_API_URL","LOCATION_API_URL","REACT_APP_LOCATION_API_URL","locationApiUrl","console","log","fetchLocation","url","a","fetch","res","json","apiUrl","fetchWeatherData","data","error","useEffect","useFetchWeather","loadingIcon","weatherContainer","Provider","value","renderData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAEMA,EAAiBC,IAAMC,gBAC7BF,EAAeG,YAAc,kBACdH,QCJA,MAA0B,0C,OCI1B,SAASI,IACtB,IAIgCC,EAJ1BC,EAAUC,qBAAWP,GAErBQ,EAAW,UAAMC,EAAN,iBAAwBH,EAAQI,MAIjD,OACE,yBAAQC,UAAU,kBAAlB,UACE,oBAAIA,UAAU,gBAAd,SAA+BL,EAAQM,OACvC,qBAAID,UAAU,gBAAd,WAL4BN,EAMDC,EAAQD,KANCQ,KAAKC,MAAMT,EAAO,MAKtD,WAGA,oBAAGM,UAAU,gBAAb,UACGL,EAAQS,YADX,MAC2BT,EAAQU,QAEnC,qBAAKL,UAAU,gBAAgBM,IAAI,OAAnC,SACE,qBAAKC,UAAWV,SClBT,SAASW,IACtB,IAAMb,EAAUC,qBAAWP,GAErBoB,EAA0B,SAAAf,GAAI,OAAIQ,KAAKC,MAAMT,EAAO,MAE1D,OACE,yBAAQM,UAAU,kBAAlB,UACE,sBAAKA,UAAU,OAAf,UACE,oBAAGA,UAAU,mBAAb,uBAA2CL,EAAQe,SAAnD,SACA,oBAAGV,UAAU,mBAAb,uBAA2CL,EAAQgB,SAAnD,WAEF,sBAAKX,UAAU,QAAf,UACE,oBAAGA,UAAU,mBAAb,oBACUS,EAAwBd,EAAQiB,YAD1C,WAGA,oBAAGZ,UAAU,mBAAb,mBACSS,EAAwBd,EAAQD,MADzC,iBCdO,SAASmB,IACtB,OACE,0BAASb,UAAU,UAAnB,UACE,cAACP,EAAD,IACA,cAACe,EAAD,OCJS,SAASM,IACtB,IAoBqBC,EApBfpB,EAAUC,qBAAWP,GAiCrB2B,EA/B0B,CAC9BC,SACE,gKACFC,UACE,iKACFC,gBACE,0LACFC,aACE,sLACFC,WACE,qEACFC,KAAM,oKACNC,aACE,oLACFC,KAAM,oKACNC,KAAM,sKAGaV,EAa0CpB,EAAQoB,IAZrEA,EAAKW,OAAOX,IACLY,WAAW,GAAW,eACzBZ,EAAGY,WAAW,IAAMZ,EAAGY,WAAW,GAAW,OAC7CZ,EAAGY,WAAW,GAAWZ,EAAGY,WAAW,KAAO,aAAe,OAC7DZ,EAAGY,WAAW,GACZZ,EAAGY,WAAW,KAAa,WAC3BZ,EAAGY,WAAW,KAAa,kBAC3BZ,EAAGY,WAAW,KAAa,YACxB,eAEF,OAGHC,EAAkB,CACtBC,gBAAgB,OAAD,OAASb,EAAT,MAEjB,OACE,qBAAKhB,UAAU,YAAY8B,MAAOF,EAAlC,SACE,cAACf,EAAD,M,+CCjBSkB,MArBf,WACE,IAAMC,ECLO,WACb,MAA0CC,mBAAS,MAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAsCF,mBAAS,MAA/C,mBAAOD,EAAP,KAAoBI,EAApB,KACA,EAAsCH,mBAAS,MAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KAEA,EAKIC,4WAJyBC,EAD7B,EACEC,0BAC4BC,EAF9B,EAEEC,2BAC2BC,EAH7B,EAGEC,0BAC4BC,EAJ9B,EAIEC,2BAGIC,EAAc,UAAMF,EAAN,kBAAgCJ,GAEpDO,QAAQC,IACNN,EACAJ,EACAM,EACAJ,GAGF,IAAMS,EAAa,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,sEACFC,MAAMF,GADJ,cACdG,EADc,gBAEGA,EAAIC,OAFP,gBAEZnD,EAFY,EAEZA,KAEFoD,EAJc,UAIFb,EAJE,cAImBvC,EAJnB,kBAIiCmC,EAJjC,cAMpBF,EAAejC,GACf8B,EAAiBsB,GAPG,4CAAH,sDASbC,EAAgB,uCAAG,WAAMN,GAAN,mBAAAC,EAAA,+EAEHC,MAAMF,GAFH,cAEfG,EAFe,gBAGFA,EAAIC,OAHF,OAGfG,EAHe,OAKf3B,EALe,uCAMhB2B,EAAK1D,MACL0D,EAAKhE,QAAQ,IAPG,IAQnBU,KAAMgC,IAEJsB,GAAMvB,EAAeJ,GAVJ,kDAYrBiB,QAAQW,MAAR,MAZqB,0DAAH,sDAqBtB,OALAC,qBAAU,WACRV,EAAcH,GACVd,GAAewB,EAAiBxB,KACnC,CAACc,EAAgBd,IAEbF,ED9Ca8B,GAiBpB,OAfmB,WACjB,IAAMC,EACJ,sBAAK/D,UAAU,UAAf,UACE,qBAAKA,UAAU,kBACf,mBAAGA,UAAU,eAAb,mDAGEgE,EACJ,cAAC,EAAeC,SAAhB,CAAyBC,MAAOlC,EAAhC,SACE,cAAClB,EAAD,MAGJ,OAAOkB,EAAcgC,EAAmBD,EAGnCI,IEZMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8294dea5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst WeatherContext = React.createContext()\r\nWeatherContext.displayName = 'WeatherContenxt'\r\nexport default WeatherContext\r\n","export default __webpack_public_path__ + \"static/media/weather-icons.f233d1da.svg\";","import React, { useContext } from 'react'\r\nimport WeatherContext from '../../contexts/WeatherContext'\r\nimport iconsFile from '../../weather-icons.svg'\r\n\r\nexport default function WeatherCardHeader() {\r\n  const weather = useContext(WeatherContext)\r\n\r\n  const weatherIcon = `${iconsFile}#icon-${weather.icon}`\r\n\r\n  const getTemperatureInCelsius = temp => Math.round(temp - 273)\r\n\r\n  return (\r\n    <header className=\"weather__header\">\r\n      <h3 className=\"weather__type\">{weather.main}</h3>\r\n      <h1 className=\"weather__temp\">\r\n        {getTemperatureInCelsius(weather.temp)}&deg;C\r\n      </h1>\r\n      <p className=\"weather__desc\">\r\n        {weather.description} - {weather.city}\r\n      </p>\r\n      <svg className=\"weather__icon\" alt=\"Icon\">\r\n        <use xlinkHref={weatherIcon}></use>\r\n      </svg>\r\n    </header>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport WeatherContext from '../../contexts/WeatherContext'\r\n\r\nexport default function WeatherCardFooter() {\r\n  const weather = useContext(WeatherContext)\r\n\r\n  const getTemperatureInCelsius = temp => Math.round(temp - 273)\r\n\r\n  return (\r\n    <footer className=\"weather__footer\">\r\n      <div className=\"left\">\r\n        <p className=\"weather__details\">Pressure: {weather.pressure} Pa</p>\r\n        <p className=\"weather__details\">Humidity: {weather.humidity} %</p>\r\n      </div>\r\n      <div className=\"right\">\r\n        <p className=\"weather__details\">\r\n          Feels: {getTemperatureInCelsius(weather.feels_like)}&deg;C\r\n        </p>\r\n        <p className=\"weather__details\">\r\n          Temp: {getTemperatureInCelsius(weather.temp)}&deg;C\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport WeatherCardHeader from './WeatherCardHeader'\r\nimport WeatherCardFooter from './WeatherCardFooter'\r\n\r\nexport default function WeatherCard() {\r\n  return (\r\n    <article className=\"weather\">\r\n      <WeatherCardHeader />\r\n      <WeatherCardFooter />\r\n    </article>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport WeatherContext from '../contexts/WeatherContext'\r\nimport WeatherCard from './WeatherCard/WeatherCard'\r\n\r\nexport default function Weather() {\r\n  const weather = useContext(WeatherContext)\r\n\r\n  const weatherBackgroundImages = {\r\n    clearSky:\r\n      'https://images.unsplash.com/photo-1601297183305-6df142704ea2?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=967&q=80',\r\n    fewClouds:\r\n      'https://images.unsplash.com/photo-1495933925743-bb94d1d4ea4c?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\r\n    scatteredClouds:\r\n      'https://images.unsplash.com/photo-1493130952181-47e36589f64d?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mzd8fHNjYXR0ZXJlZCUyMGNsb3Vkc3xlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n    brokenClouds:\r\n      'https://images.unsplash.com/photo-1614368558175-ad4a95a6d8d6?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTh8fGJyb2tlbiUyMGNsb3Vkc3xlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n    showerRain:\r\n      'https://cdn.pixabay.com/photo/2013/02/21/19/11/rain-84648__340.jpg',\r\n    rain: 'https://images.unsplash.com/photo-1477847616630-cf9cf8815fda?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NDJ8fHJhaW58ZW58MHx8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n    thunderstorm:\r\n      'https://images.unsplash.com/photo-1457528877294-b48235bdaa68?ixid=MnwxMjA3fDB8MHxzZWFyY2h8OXx8dGh1bmRlcnN0b3JtfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n    snow: 'https://images.unsplash.com/photo-1457269449834-928af64c684d?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTR8fHNub3d8ZW58MHx8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n    mist: 'https://images.unsplash.com/photo-1568096584300-d7f22180b7e7?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTJ8fG1pc3R8ZW58MHx8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n  }\r\n\r\n  const getImageType = id => {\r\n    id = String(id)\r\n    if (id.startsWith(2)) return 'thunderstorm'\r\n    if (id.startsWith(3) || id.startsWith(7)) return 'mist'\r\n    if (id.startsWith(5)) return id.startsWith(521) ? 'showerRain' : 'rain'\r\n    if (id.startsWith(8)) {\r\n      if (id.startsWith(800)) return 'clearSky'\r\n      if (id.startsWith(801)) return 'scatteredClouds'\r\n      if (id.startsWith(802)) return 'fewClouds'\r\n      return 'brokenClouds'\r\n    }\r\n    return null\r\n  }\r\n  const containerImageUrl = weatherBackgroundImages[getImageType(weather.id)]\r\n  const containerStyles = {\r\n    backgroundImage: `url(${containerImageUrl})`,\r\n  }\r\n  return (\r\n    <div className=\"container\" style={containerStyles}>\r\n      <WeatherCard />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport Weather from './components/Weather'\nimport useFetchWeather from './hooks/useFetchWeather'\nimport WeatherContext from './contexts/WeatherContext'\nimport './App.css'\n\nfunction App() {\n  const weatherData = useFetchWeather()\n\n  const renderData = () => {\n    const loadingIcon = (\n      <div className=\"loading\">\n        <div className=\"lds-dual-ring\"></div>\n        <p className=\"loading__msg\">Getting your weather data from API</p>\n      </div>\n    )\n    const weatherContainer = (\n      <WeatherContext.Provider value={weatherData}>\n        <Weather />\n      </WeatherContext.Provider>\n    )\n    return weatherData ? weatherContainer : loadingIcon\n  }\n\n  return renderData()\n}\n\nexport default App\n","import { useEffect, useState } from 'react'\r\n\r\nexport default function useFetchWeather() {\r\n  const [weatherApiUrl, setWeatherApiUrl] = useState(null)\r\n  const [weatherData, setWeatherData] = useState(null)\r\n  const [fetchedCity, setFetchedCity] = useState(null)\r\n\r\n  const {\r\n    REACT_APP_WEATHER_API_KEY: WEATHER_API_KEY,\r\n    REACT_APP_LOCATION_API_KEY: LOCATION_API_KEY,\r\n    REACT_APP_WEATHER_API_URL: WEATHER_API_URL,\r\n    REACT_APP_LOCATION_API_URL: LOCATION_API_URL,\r\n  } = process.env\r\n\r\n  const locationApiUrl = `${LOCATION_API_URL}?token=${LOCATION_API_KEY}`\r\n\r\n  console.log(\r\n    WEATHER_API_URL,\r\n    WEATHER_API_KEY,\r\n    LOCATION_API_URL,\r\n    LOCATION_API_KEY,\r\n  )\r\n\r\n  const fetchLocation = async url => {\r\n    const res = await fetch(url)\r\n    const { city } = await res.json()\r\n\r\n    const apiUrl = `${WEATHER_API_URL}?q=${city}&appid=${WEATHER_API_KEY}&mode=json`\r\n\r\n    setFetchedCity(city)\r\n    setWeatherApiUrl(apiUrl)\r\n  }\r\n  const fetchWeatherData = async url => {\r\n    try {\r\n      const res = await fetch(url)\r\n      const data = await res.json()\r\n\r\n      const weatherData = {\r\n        ...data.main,\r\n        ...data.weather[0],\r\n        city: fetchedCity,\r\n      }\r\n      if (data) setWeatherData(weatherData)\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchLocation(locationApiUrl)\r\n    if (weatherApiUrl) fetchWeatherData(weatherApiUrl)\r\n  }, [locationApiUrl, weatherApiUrl])\r\n\r\n  return weatherData\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}